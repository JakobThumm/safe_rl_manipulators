<launch>
  <rosparam file = "$(find failsafe_consistent_planner)/config/parameters.yaml" />
  <rosparam file = "$(find human_cylinder)/config/sensors_parameters.yaml" />
  <rosparam file = "$(find robot_reach)/config/robot_parameters.yaml" />
  <rosparam file="$(find model_control)/config/schunk_control.yaml"/>

  <node pkg="nodelet" type="nodelet" name="standalone_nodelet" args="manager" output="screen"/>
  
  <node pkg="nodelet" type="nodelet" name="FailsafeConsistentNodelet" args="load online_verification/FailsafeConsistentNodelet standalone_nodelet" output="screen"/>
  <node pkg="nodelet" type="nodelet" name="HumanCylinderNodelet" args="load human_cylinder/HumanCylinderNodelet standalone_nodelet" output="screen"/>
  <node pkg="nodelet" type="nodelet" name="RobotReachNodelet" args="load robot_reach/RobotReachNodelet standalone_nodelet" output="screen"/>
  <node pkg="nodelet" type="nodelet" name="VerifyISONodelet" args="load verify_iso/VerifyISONodelet standalone_nodelet" output="screen"/>
  <node pkg="nodelet" type="nodelet" name="safe_trajectory_selector" args="load safe_trajectory_selector/SafeTrajectorySelectorNodelet standalone_nodelet"/>

  <node name="initialisation" type="initialisation_node" pkg="initialisation"/>

  <!-- GAZEBO -->
  <arg name="paused" default="false"/>
  <arg name="gui" default="true"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">	    
    <arg name="paused" value="$(arg paused)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(find model_gazebo)/worlds/my_world.world"/>
  </include>


  <param name="use_gui" value="$(arg gui)"/>

  <!-- send lwa4d urdf to param server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find model_description)/urdf/situation.urdf.xacro'" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model lwa4d -z 0.01 " respawn="false" output="screen" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

  <!-- RVIZ -->
  <node pkg="nodelet" type="nodelet" name="RvizMarkerNodelet" args="load rviz_marker/RvizMarkerNodelet standalone_nodelet"/>
  
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find model_control)/config/config.rviz" />
	  
</launch>
